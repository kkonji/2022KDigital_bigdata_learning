cor(cats$Bwt, cats$Hwt, method='pearson')
cor(cats$Bwt, cats$Hwt, method='spearman')
# 12장
library(MASS)
cor(cats$Bwt, cats$Hwt)
cor(cats$Bwt, cats$Hwt, method='pearson')
cor(cats$Bwt, cats$Hwt, method='spearman')
cor(cats$Bwt, cats$Hwt, method='kendall')
# 상관계수에 대한 유의성 검증
cor.test(cats$Bwt, cats$Hwt)
cor.test(~Bwt + Hwt, data=cats)
cor.test(~Bwt + Hwt, data=cats, subset=(Sex=='F'))
cor.test
# 3개 이상의 변수간의 상관계수 유의성 검정
library(psych)
corr.test(iris[,-5])
library(corrgram)
corrgram(state.x77, lower.panel = panel.pie, order=T, upper.panel = panel.conf)
corr.test(iris[,-5], short=F)
print(corr.test(iris[,-5]), short=F)
library(corrgram)
corrgram(state.x77, lower.panel = panel.pie, order=T, upper.panel = panel.conf)
# 상관관계 도표
library(psych)
pairs.panels(state.x77, bg='red', pch=21, hist.col='gold', main='correlation')
corrgram(state.x77, lower.panel = panel.pie, order=T, upper.panel = panel.conf)
# 편상관계수 : 두 변수간의 순수한 상관관계를 파악하기 위한 지표
colnames(mtcars)
mtcars2 <- mtcars[,c('mpg', 'cyl', 'hp', 'wt')]
cor(mtcars2)
pcor(c(1,3,2,4), cov(mtcars2))
# 연비와 마력 간의 편상관계수 구하기
library(ggm)
pcor(c(1,3,2,4), cov(mtcars2))
# pcor (벡터, 공분산행렬)
# 벡터의 첫 두 인덱스는 편상관계수를 계산할 변수, 나머지는 통제할 변수
# 공분산행렬은 cov로 계산
pcor(c(1,3,2,4), cov(mtcars2))
pcor.test(pcor(c(1,3,2,4), cov(mtcars2)), q=2, n=nrow(mtcars2))
library(ppcor)
library(ppcor)
# p-value는 0.14로 귀무가설을 기각하지 못한다. 그러므로
# mpg와 hp간에는 순수한 상관관계는 존재x
install.packages(ppcor)
# p-value는 0.14로 귀무가설을 기각하지 못한다. 그러므로
# mpg와 hp간에는 순수한 상관관계는 존재x
install.packages('ppcor')
library(ppcor)
pcor.test(mtcars2['mpg'], mtcars2['hp'], mtcars2[c('cyl', 'wt')])
library(car)
str(Prestige)
df <- Prestige
table(df$type)
model <-lm(income ~ education, data=df)
model2 <-lm(income ~ women, data=df)
model3 <-lm(income ~ prestige, data=df)
summary(model)
par(mfrow=c(1,3))
plot(income~education, data=df, col='tomato', pch='🍅')
abline(model, col='skyblue', lwd=2)
plot(income~women, data=df, col='orange', pch='🍣')
abline(model2, col='skyblue', lwd=2)
plot(income~prestige, data=df, col='green', pch='🍞')
abline(model3, col='skyblue', lwd=2)
par(mfrow=c(1,1))
# 신뢰구간 반환
confint(model)
# 회귀계수 반환
coef(model)
anova(model)
summary(resid(model))
summary(resid(model))
summary(model)
# 예측값 반환
fitted(model)
# predict 함수를 이용해서 예측
# 새로운 데이터 newdata 넣기
prestige.new <- data.frame(education=c(5,10,15))
# 예측
predict(model, newdata=prestige.new)
# interval= 95%신뢰구간 출력
predict(model, newdata=prestige.new, interval = 'confidence')
lm(income ~ education, data=Prestige, subset = (education > mean(education)))
lm(income ~ education, data=Prestige, subset = (education <= mean(education)))
# 다항회귀분석: 단순회귀분석이 1차항에 대해서만 했다면, 다항회귀분석은 2차 이상의 항을 가진 다항함수에 피팅시키는 회귀방법
model <- lm(income ~ education + I(education^2), data=Prestige)
summary(model)
plot(Prestige$income~Prestige$education, pch=19, col='darkorange', xlab='education', ylab='income', main= 'Education and income')
plot(Prestige$income~Prestige$education, pch=19, col='darkorange', xlab='education', ylab='income', main= 'Education and income')
plot(Prestige$income~Prestige$education, pch=19, col='darkorange', xlab='education', ylab='income', main= 'Education and income')
library(dplyr)
lines(arrange(data.frame(Prestige$education), fitted(model)), Prestige$education, col='cornflowerblue', lwd=2)
# 다항회귀분석: 단순회귀분석이 1차항에 대해서만 했다면, 다항회귀분석은 2차 이상의 항을 가진 다항함수에 피팅시키는 회귀방법
model <- lm(income ~ education + I(education^2), data=Prestige)
summary(model)
plot(Prestige$income~Prestige$education, pch=19, col='darkorange', xlab='education', ylab='income', main= 'Education and income')
library(dplyr)
lines(arrange(data.frame(Prestige$education), fitted(model)), Prestige$education, col='cornflowerblue', lwd=2)
lines(arrange(data.frame(Prestige$education, fitted(model)), Prestige$education ), col='cornflowerblue', lwd=2)
# 푸아송 회귀분석 : 결과변수가 특정 기간 이내의 사건발생횟수인 경우에 적용
library(robust)
data("breslow.dat")
str(breslow.dat)
seizure <- breslow.dat[c('Base', 'Age', 'Trt', 'sumY')]
summary(seizure)
hist(seizure$sumY, breaks=20)
# 종속변수가 횟수이기 때문에 푸아송 분포를 사용
model <- glm(sumY~ Base + Age + Trt, data=seizure, family=poisson)
summary(model)
# ggplot 복습
?ggplot
# ggplot 복습
library(ggplot2)
?ggplot
letters[1:3]
df
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
df
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
ds
# ggplot test 1
ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
# ggplot test 1
ggplot(df, aes(gp, y)) +
geom_point() # +
ggplot() +
geom_point(data = df, aes(gp, y)) +
geom_point(data = ds, aes(gp, mean), colour = 'red', size = 3) +
geom_errorbar(
data = ds,
aes(gp, mean, ymin = mean - sd, ymax = mean + sd),
colour = 'red',
width = 0.4)
?aes
